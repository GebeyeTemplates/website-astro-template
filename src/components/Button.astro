---
interface Props {
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  target?: '_blank' | '_self';
  rel?: string;
  class?: string; // For Tailwind classes
}

const {
  variant = 'primary',
  size = 'md',
  href,
  target,
  rel,
  class: className,
  ...attrs
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center font-medium rounded-md transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2';

const variantClasses = {
  primary: 'bg-primary text-white hover:bg-indigo-700 focus:ring-primary',
  secondary: 'bg-secondary text-gray-900 hover:bg-emerald-400 focus:ring-secondary',
  outline: 'border border-gray-300 text-gray-700 hover:bg-gray-100 focus:ring-gray-300',
  ghost: 'text-gray-700 hover:bg-gray-100 focus:ring-gray-300',
};

const sizeClasses = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-base',
  lg: 'px-5 py-2.5 text-lg',
};

const finalClasses = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className || ''}`;
---

{href ? (
  <a href={href} class={finalClasses} target={target} rel={rel} {...attrs}>
    <slot />
  </a>
) : (
  <button class={finalClasses} {...attrs}>
    <slot />
  </button>
)}